worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /tmp/nginx.pid;


events {
    worker_connections  1024;
}


http {

    proxy_temp_path /tmp/proxy_temp;
    client_body_temp_path /tmp/client_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

        server {

            listen [::]:80 http2;
            listen      80 http2;

            listen [::]:443 ssl http2 default_server;
            listen      443 ssl http2 default_server;

            server_name example.com;

            # your own certificates, for example from Lets Encrypt with the lego script
            ssl_certificate /etc/ssl/domain.crt;
            ssl_certificate_key /etc/ssl/domain.key;

            # the ffdhe4096 can be downloaded from multiple trusted places, for example from
            #   https://github.com/mozilla/ssl-config-generator/blob/master/src/static/ffdhe4096.txt
            # it is probably not needed at all when using ECDH only
            ssl_dhparam /etc/ssl/ffdhe4096.pem;

            ssl_protocols TLSv1.3 TLSv1.2;
            ssl_prefer_server_ciphers on;
            ssl_ecdh_curve secp521r1:secp384r1;
            ssl_ciphers ECDH+CHACHA20:ECDH+AESGCM+AES256;

            ssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384;

            ssl_conf_command Options ServerPreference,PrioritizeChaCha,NoRenegotiation,NoResumptionOnRenegotiation;

            ssl_session_cache shared:TLS:2m;
            ssl_buffer_size 4k;

            ssl_stapling on;
            ssl_stapling_verify on;
            resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001];

            add_header Strict-Transport-Security 'max-age=31536000; preload' always;
            add_header Content-Security-Policy "upgrade-insecure-requests" always;

            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options nosniff;
            # these are very strict and dont make too much sense to actually use in production but they give the perfect rating on internet.nl test
            add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; frame-src 'self'; frame-ancestors 'self'; form-action 'self'; font-src 'self';img-src 'self';script-src 'self';";
            add_header Referrer-Policy "strict-origin";

            location / {

                root /usr/share/nginx/html;
                error_page 500 502 503 504 /50x.html;

            }

        }

}
